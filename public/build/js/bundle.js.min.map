{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","addEventListener","terminoBusqueda","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onClick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteInputHidden","seleccionarPonente","ponente","contains","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","normalize","replace","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    //Selecciono el UL Que Contiene las Horas\r\n    const horas = document.querySelector('#horas');\r\n    //Si Seleccionó Una Hora Entonces\r\n    if(horas){\r\n        //Selecciono La Categoria\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        //Le Asignamos El Evento Change Con La Función terminoBusqueda\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        //Selecciono Los Días\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        //Selecciono Los Inputs De Tipo Hidden Que Contendrán Los Id A Enviar A La BD\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n        //Iteramos Los Días Y Les Asignamos El Evento Change Con La Función terminoBusqueda\r\n        dias.forEach( dia=> dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            //La Categoría Vendrá Del Select De Categorias Con El name=\"categoria_id\"\r\n            categoria_id: +categoria.value || '', //(+) Hace El Numero Entero\r\n            //Los Días Vendrán De Los Radio Buttons Con El name=\"dia\"\r\n            dia: +inputHiddenDia.value || ''\r\n        };\r\n        //Comprobamos Si El Objeto Está Lleno O Sea: Si Los Dos Campos (categoria_id, dia_id) Tienen Algo Entonces\r\n        if(!Object.values(busqueda).includes('')){\r\n\r\n            (async() =>{\r\n            //Hacemos Que Se Ejecuten Las Siguientes Lineas Cuando Esta Función Finalice\r\n            //Esto Con El Fin De Poder Quitar La Clase horas__hora--deshabilitada\r\n            await buscarEventos();\r\n            \r\n            //Resaltar Hora Actual\r\n            const id = inputHiddenHora.value; //Obtenemos El Id De La Hora Que Tiene El Evento Actual\r\n            const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n            horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n            horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n            horaSeleccionada.onClick = seleccionarHora;\r\n            })()\r\n\r\n        }\r\n\r\n        //Se Ejecuta Cada El Usuario Cambia La Categoría Y El Día\r\n        function terminoBusqueda(e){\r\n            //Llenamos El Objeto Busqueda En Su Parte De Name, Con Los Names De Las Categorias Y Los Días\r\n            busqueda[e.target.name] = e.target.value;\r\n            //Reiniciar Campos Ocultos Y El Selector De Horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            //Deshabilitar Hora Previa, Cuando Se Cambia La Categoría O El Día\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            //Limitamos El LLamado A La API Solo Para Cuando Nuestro Objeto busqueda Esté Lleno\r\n            if(Object.values(busqueda).includes('')){ //Si Almenos 1 De Los Campos Está Vacio Entonces:\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n        \r\n        //Consulta La API\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            const resultado = await fetch(url); //Hace La Consulta Hacia La URL Para Ver Si Puede Conectarse\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n            \r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar Las Horas\r\n            const listadoHoras = document.querySelectorAll('#horas li'); //Seleccionamos Todas Las Horas\r\n            //Deshabilitamos Todas Las Horas Cada Vez Que Busquemos Un Nuevo Evento\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n            \r\n            //Comprobar Eventos Ya Tomados Y Quitar La Variable De Deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id); //Creamos Un Arreglo Con El Id De La Hora\r\n\r\n            const listadoHorasArray = Array.from(listadoHoras); //Convertimos Las Horas A Arreglo Para Poder Usar Filter\r\n           \r\n            //Obtenemos Todas Las Horas Que No Han Sido Seleccionadas\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId));\r\n            \r\n            //Quitamos La Clase Para Que Las Horas Que No Estaban Seleccionadas Estén Disponibles\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            //Trae Todas Las Horas Menos La Que Tiene La Clase De horas__hora--deshabilitada\r\n            //Con Esto No Se Guardará El Name De Una Hora Que Ya Está Utilizada\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Deshabilitar Hora Previa, Si Hay Un Nuevo Click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            //Agregar Clase De Seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n            //Pasamos El Valor Del Id De Hora Al Input Hidden \r\n            inputHiddenHora.value = e.target.dataset.horaId //dataset Para Leer Atributos Personalizados De HTML\r\n            //Llenar Campo Oculto De Dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n            // console.log(); \r\n        }\r\n    }\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n    if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteInputHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if(ponenteInputHidden.value){\r\n            (async() => {\r\n                const ponente = await obtenerPonente(ponenteInputHidden.value);\r\n                const {nombre, apellido} = ponente;\r\n                //Insertar En El Html\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre}  ${apellido}`;\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })()\r\n        }\r\n\r\n        //Obtiene Todos Los Ponentes\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url); //Hace La Consulta Hacia La URL Para Ver Si Puede Conectarse\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);   \r\n        }\r\n\r\n        //Obtener Un Ponente Por Su Id\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            return resultado;\r\n        }\r\n        //Esta Función Le Da Un Formato Diferente A Los Ponentes, Obteniendo Solo La Información Necesaria\r\n        function formatearPonentes(arrayPonentes = []){\r\n            //Recordemos Que Map Crea Un Arreglo Nuevo\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return{\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n        //Como Su Nombre Lo Dice, Buscará Los Diferentes Ponentes Que Hay En La BD\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n            if(busqueda.length > 3){\r\n                //Creamos Expresión Regular Para Que Al Escribir Un Nombre No Importen Mayusculas O Minúsculas Y\r\n                //Otra Para Obviar Los Acentos\r\n                //Una Expresión Regular Busca Un Valor En Un Patrón\r\n                //\"i\" Significa Que No Importa Si Algo Está Escrito En Mayuscula O Minúscula\r\n                // const expresion = new RegExp(busqueda, \"i\")//Si Solo Queremos Que No Importen Mayusculas O Minúsculas\r\n                const expresion = new RegExp(busqueda.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"), \"i\");\r\n\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    //Recordemos Que \"ponente\" Es La Variable Temporal De La Función formatearPonentes\r\n                    //No Importará Si Está Escrito En Mayuscula O Minúscula O Si Tiene O Nó Acento\r\n                    if(ponente.nombre.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase().search(expresion) != -1){\r\n                        return ponente; //Retornamos El Ponente En Forma De Arreglo Gracias A Filter()\r\n                    }\r\n                })\r\n            }else{\r\n                //Cuando Se Borre Lo Que Estaba Escrito No Mostrará Ningun Ponente La Función mostrarPonentes()\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n        //Mostrará Los Ponentes Encontrados En Pantalla\r\n        function mostrarPonentes(){\r\n            //Limpiamos Cada Vez Que Se Encuentra Un Ponente\r\n            //Este While Tiene Más Performance Que listadoPonentes.innerHTML = '';\r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0){\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    //Recordemos Que Unas De Las Ventajas De Usar createElement Es Que Podemos Asociar Eventos\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n                    //Añadir Al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            }else{\r\n                //No Se Encontraron Resultados Entonces:\r\n                if(ponentesInput.value.length >=3 ) {\r\n                    const noResultados = document.createElement('P');\r\n                    noResultados.classList.add('listado-ponentes__no-resultado');\r\n                    noResultados.textContent = 'No Hay Resultados Para Tu Busqueda';\r\n                    //Añadir Al DOM\r\n                    listadoPonentes.appendChild(noResultados);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e){\r\n            const ponente = e.target //Con Esto El Ponente Será El Que Seleccionemos\r\n            \r\n            // Verificar si el ponente ya está seleccionado\r\n            if(ponente.classList.contains('listado-ponentes__ponente--seleccionado')) {\r\n            // Si está seleccionado, quitar la clase de selección y limpiar el valor oculto\r\n            ponente.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            ponenteInputHidden.value = ''; // Desselecciona el ponente\r\n            } else {\r\n             // Si no está seleccionado, quitar la selección previa, si existe\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if(ponentePrevio){\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            // Agregar la clase de selección al nuevo ponente\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            //Asignamos El Id De La Selección A La Variable ponenteInputHidden\r\n            ponenteInputHidden.value = ponente.dataset.ponenteId;\r\n            }\r\n        }\r\n    }\r\n})();","(function () { //Función IIFE\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n        //Recuperar Del Input Oculto\r\n        if(tagsInputHidden.value !== ''){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar Los Cambios En El Input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            //El keyCode Nos Permite Saber El Código De La Tecla Presionada, En Este Caso 44 = coma(,)\r\n            if (e.keyCode === 44) {\r\n                //Para Que No Se Ponga La Coma En Automático Cuando Se Borra El Input Quitamos La Acción Por Defecto Del Form\r\n                e.preventDefault();\r\n                //Prevenir Espacios En Blanco\r\n                if (e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n                //Tomamos Una Copia Del Arreglo Tags, Y Reemplazamos El Contenido Con Lo Que Hay En El Input\r\n                tags = [...tags, e.target.value.trim()];\r\n                //Vaciamos El Input Cada Vez Que Se Pone Una Coma(,)\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n            //Iteramos El Arreglo Que Tiene Los Tags, Creo La Variable Momentanea Tag Y Hago Escripting Para\r\n            //Mostrar Los Tags En El Lugar Deseado\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                //Pasamos Función A Cada Uno De Los Tags Conforme Son Creados\r\n                etiqueta.ondblclick = eliminarTag; //No Ponemos eliminarTag() Por Que Llamaría La Función Inmediatamente\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        //Como Su Nombre lo Dice, Nos Permitirá Eliminar Los Tags, Se Pasa El Evento (e) Para Identificar El Tag\r\n        function eliminarTag(e){\r\n            //Quitamos El Tag Del DOM\r\n            e.target.remove();\r\n            //Quitamos El Tag Del Arreglo\r\n            //Traenos Todos Los Tags Que No Sean Al Que Yo Le Dí Click \r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            //Refrescamos Y Sincronizamos El Input Oculto Con Los Nuevos Valores\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        //Esta Función Nos Permitirá Agregar Y Quitar Los Tags O Etiquetas, Seleccionando El Input Hidden\r\n        //Con El Name Tags El Cual Usaremos Para Comunicarnos Con La BD\r\n        function actualizarInputHidden(){\r\n            //Convertimos El Arreglo En Un String\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})() //Este Parentecis Manda A Llamar A La Función\r\n"]}