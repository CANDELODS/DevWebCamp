{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","addEventListener","terminoBusqueda","dias","querySelectorAll","inputHiddenHora","e","target","name","value","Object","values","includes","async","url","resultado","fetch","json","forEach","hora","seleccionarHora","buscarEventos","dataset","horaId","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","classList","add","ondblclick","eliminarTag","appendChild","actualizarInputHidden","remove","filter","toString","split","keyCode","preventDefault","trim"],"mappings":"CAAA,WAIA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CAEAC,aAAA,GAEAC,IAAA,IAGAJ,SAAAC,cAAA,yBAEAI,iBAAA,SAAAC,GAEA,MAAAC,EAAAP,SAAAQ,iBAAA,gBAGAC,GADAT,SAAAC,cAAA,mBACAD,SAAAC,cAAA,qBAIA,SAAAK,EAAAI,GAEAR,EAAAQ,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAEAC,OAAAC,OAAAb,GAAAc,SAAA,KAOAC,iBACA,MAAAb,IAAAA,EAAAD,aAAAA,GAAAD,EACAgB,EAAA,+BAAAd,kBAAAD,IACAgB,QAAAC,MAAAF,SACAC,EAAAE,OAKArB,SAAAQ,iBAAA,aACAc,QAAAC,GAAAA,EAAAlB,iBAAA,QAAAmB,IAdAC,GAiBA,SAAAD,EAAAd,GAEAD,EAAAI,MAAAH,EAAAC,OAAAe,QAAAC,OA5BApB,EAAAe,QAAAlB,GAAAA,EAAAC,iBAAA,SAAAC,KArBA,GCAA,WACA,MAAAsB,EAAA5B,SAAAC,cAAA,eACA,GAAA2B,EAAA,CACA,MAAAC,EAAA7B,SAAAC,cAAA,SACA6B,EAAA9B,SAAAC,cAAA,iBACA,IAAA8B,EAAA,GA2BA,SAAAC,IACAH,EAAAI,YAAA,GAGAF,EAAAT,QAAAY,IACA,MAAAC,EAAAnC,SAAAoC,cAAA,MACAD,EAAAE,UAAAC,IAAA,mBACAH,EAAAF,YAAAC,EAEAC,EAAAI,WAAAC,EACAX,EAAAY,YAAAN,KAGAO,IAIA,SAAAF,EAAA9B,GAEAA,EAAAC,OAAAgC,SAGAZ,EAAAA,EAAAa,OAAAV,GAAAA,IAAAxB,EAAAC,OAAAsB,aAEAS,IAKA,SAAAA,IAEAZ,EAAAjB,MAAAkB,EAAAc,WAxDA,KAAAf,EAAAjB,QACAkB,EAAAD,EAAAjB,MAAAiC,MAAA,KACAd,KAIAJ,EAAAvB,iBAAA,YAEA,SAAAK,GAEA,GAAA,KAAAA,EAAAqC,QAAA,CAIA,GAFArC,EAAAsC,iBAEA,KAAAtC,EAAAC,OAAAE,MAAAoC,QAAAvC,EAAAC,OAAAE,MAAA,EACA,OAGAkB,EAAA,IAAAA,EAAArB,EAAAC,OAAAE,MAAAoC,QAEArB,EAAAf,MAAA,GACAmB,SA5BA","file":"bundle.js","sourcesContent":["(function(){\r\n    //Selecciono el UL Que Contiene las Horas\r\n    const horas = document.querySelector('#horas');\r\n    //Si Seleccionó Una Hora Entonces\r\n    if(horas){\r\n        let busqueda = {\r\n            //La Categoría Vendrá Del Select De Categorias Con El name=\"categoria_id\"\r\n            categoria_id: '',\r\n            //Los Días Vendrán De Los Radio Buttons Con El name=\"dia\"\r\n            dia: ''\r\n        };\r\n        //Selecciono La Categoria\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        //Le Asignamos El Evento Change Con La Función terminoBusqueda\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        //Selecciono Los Días\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        //Selecciono Los Inputs De Tipo Hidden Que Contendrán Los Id A Enviar A La BD\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n        //Iteramos Los Días Y Les Asignamos El Evento Change Con La Función terminoBusqueda\r\n        dias.forEach( dia=> dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e){\r\n            //Llenamos El Objeto Busqueda En Su Parte De Name, Con Los Names De Las Categorias Y Los Días\r\n            busqueda[e.target.name] = e.target.value;\r\n            //Limitamos El LLamado A La API Solo Para Cuando Nuestro Objeto busqueda Esté Lleno\r\n            if(Object.values(busqueda).includes('')){ //Si Almenos 1 De Los Campos Está Vacio Entonces:\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n        \r\n        //Consulta La API\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            const resultado = await fetch(url); //Hace La Consulta Hacia La URL Para Ver Si Puede Conectarse\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles();\r\n        }\r\n\r\n        function obtenerHorasDisponibles(){\r\n            const horasDisponibles = document.querySelectorAll('#horas li');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Pasamos El Valor Del Id De Hora Al Input Hidden \r\n            inputHiddenHora.value = e.target.dataset.horaId //dataset Para Leer Atributos Personalizados De HTML\r\n            // console.log(); \r\n        }\r\n    }\r\n})();","(function () { //Función IIFE\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n        //Recuperar Del Input Oculto\r\n        if(tagsInputHidden.value !== ''){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar Los Cambios En El Input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            //El keyCode Nos Permite Saber El Código De La Tecla Presionada, En Este Caso 44 = coma(,)\r\n            if (e.keyCode === 44) {\r\n                //Para Que No Se Ponga La Coma En Automático Cuando Se Borra El Input Quitamos La Acción Por Defecto Del Form\r\n                e.preventDefault();\r\n                //Prevenir Espacios En Blanco\r\n                if (e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n                //Tomamos Una Copia Del Arreglo Tags, Y Reemplazamos El Contenido Con Lo Que Hay En El Input\r\n                tags = [...tags, e.target.value.trim()];\r\n                //Vaciamos El Input Cada Vez Que Se Pone Una Coma(,)\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n            //Iteramos El Arreglo Que Tiene Los Tags, Creo La Variable Momentanea Tag Y Hago Escripting Para\r\n            //Mostrar Los Tags En El Lugar Deseado\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                //Pasamos Función A Cada Uno De Los Tags Conforme Son Creados\r\n                etiqueta.ondblclick = eliminarTag; //No Ponemos eliminarTag() Por Que Llamaría La Función Inmediatamente\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        //Como Su Nombre lo Dice, Nos Permitirá Eliminar Los Tags, Se Pasa El Evento (e) Para Identificar El Tag\r\n        function eliminarTag(e){\r\n            //Quitamos El Tag Del DOM\r\n            e.target.remove();\r\n            //Quitamos El Tag Del Arreglo\r\n            //Traenos Todos Los Tags Que No Sean Al Que Yo Le Dí Click \r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            //Refrescamos Y Sincronizamos El Input Oculto Con Los Nuevos Valores\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        //Esta Función Nos Permitirá Agregar Y Quitar Los Tags O Etiquetas, Seleccionando El Input Hidden\r\n        //Con El Name Tags El Cual Usaremos Para Comunicarnos Con La BD\r\n        function actualizarInputHidden(){\r\n            //Convertimos El Arreglo En Un String\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})() //Este Parentecis Manda A Llamar A La Función\r\n"]}